.main {
    display: flex;
    position: relative;
    flex-direction: column;
    align-items: center;
    min-height: 100vh;
    background-color: #010102;
    cursor: auto;
}

.intro {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between; /* Ensure elements are spaced out */
    min-height: 98vh; /* Ensure the intro section takes up most of the viewport height */
    margin-top: 30px;
}

.customCursor {
    position: fixed;
    top: -15px;
    left: -15px;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    pointer-events: none;
    z-index: 9999;
}


.form {
    display: flex;
    flex-direction: column;
    gap: 24px;
}

.form input,
.form textarea {
    padding: 10px;
    font-size: 16px;
    width: 300px;
    color: white;
    border: 1px solid #2be82b;
    border-radius: 8px;
    background-color: #111111;
}

.stepTwoInput{
    padding: 10px;
    font-size: 16px;
    width: 300px;
    color: white;
    border: 1px solid #2be82b;
    border-radius: 8px;
    background-color: #111111;
}

.connectButton {
    color: white;
    border-radius: 12px;
    background-color: transparent;
    border: 1px solid #2be82b;
    transition: background-color 0.3s ease, color 0.3s ease;
}

.connectButton:hover {
    color: #2be82b; /* Change text color to match the border color */
    background-color: #1a1f1a; /* Change background color on hover */
    border: 1px solid #2be82b;
}

.linkedButton{
    color: #b2b2b2;
    border-radius: 12px;
    background-color: #313131;
    border: 1px solid #8bc48b;
    transition: background-color 0.3s ease, color 0.3s ease;
}

.curateText{
    margin-top: 20px;
    text-align: center;
}
.form textarea{
    height: 200px;
    resize: vertical;
}

.form button {
    padding: 10px;
    font-size: 16px;
    cursor: pointer;
}

.stepTwo {
    display: flex;
    flex-direction: column;
    gap: 10px;
}

.stepTwo button {
    padding: 10px;
    font-size: 16px;
    cursor: pointer;
}

.stepThree {
    text-align: center;
}
.instructions{
    text-align: left;
}
.instructions p {
    font-size: 18px; /* Slightly larger font for the paragraph */
    font-weight: bold; /* Bold text for emphasis */
    margin-bottom: 10px; /* Space below the paragraph */
    text-align: center; /* Center align the text */
    margin-bottom: 20px;
}
.instructions ol {
    margin-left: 20px; /* Indent the list */
    padding: 0px 20px;
    font-size: 16px; /* Font size for the list items */
    margin-bottom: 40px;
}

.instructions ol li {
    margin-bottom: 10px; /* Space between list items */
}

.instructions ol li span {
    color: #04fc08; /* Green color for the highlighted text */
    font-weight: bold; /* Bold the highlighted text */
}
.stepThree button {
    padding: 10px;
    font-size: 16px;
    cursor: pointer;
}

.stepIndicator {
    margin-top: 40px;
    display: flex;
    justify-content: space-around;
    gap: 30px;
    margin-bottom: 40px;
}

.button2{
    background-color: #2be82b;
    border: none;
    border-radius: 12px;
    color: #1c1c1c;
    font-size: 14px !important;
    padding: 10px 30px;
    font-weight: bold;
}

.button2:hover{
    background-color: #21b721;
}


.enterButton{
    background-color: #2be82b;
    border: none;
    padding: 10px 36px;
    margin-top: 20px;
    border-radius: 10px;
    color: #000000;
    font-weight: bold;
    cursor: pointer;
}

.imageContainer{
    display: flex;
    height: 100%;
    margin-top: 40px;
    justify-content: flex-end;
}
.responsiveImage{
    display: flex;
    justify-content: flex-end;
    height: 100%;
}

.enterButton:hover{
    background-color: #21b721;
}

.rotatingImage {
    display: inline-block;
    animation: rotateImage 3.5s linear infinite;
}

.introTexts{
    display: flex;
    flex-direction: column;
    align-items: center;
}



.generatedImageContainer {
    max-width: 100%;
    overflow: hidden;
    padding-bottom: 50px;
    margin: 0 auto; /* Center the container */
}
.centeredButtonContainer {
    display: flex;
    justify-content: center;
    text-align: center;
    min-width: 100%;
    margin-top: 10px; /* Adjust as needed for spacing */
}
.generatedImage {
    max-width: 560px;
    width: 100%;
    height: auto;
    display: block;
    cursor: pointer; /* Change cursor to pointer to indicate it's clickable */
    transition: transform 0.3s ease, box-shadow 0.3s ease; /* Smooth transition for hover effects */
}

.generatedImage:hover {
    transform: scale(1.05); /* Slightly enlarge the image on hover */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Add a subtle shadow on hover */
}



.stepIndicator div {
    padding: 10px;
    font-size: 16px;
    border-radius: 50%;
    width: 25px;
    height: 25px;
    text-align: center;
}



.activeStep {
    background-color: #2be82b;
    color: white;
}

.inactiveStep {
    background-color: #ddd;
    color: black;
}
.charCount {
    position: absolute;
    bottom: 8px;
    right: 8px;
    font-size: 12px;
    color: #666;
}

.textAreaWrapper {
    position: relative;
}

.shareButton {
    padding: 0.5rem;
    background-color: #2be62c;
    border: none;
    color: #000;
    font-weight: bold;
    min-width: 320px;
    cursor: pointer; /* Add a cursor pointer to indicate the button is clickable */
    transition: background-color 0.3s ease; /* Smooth transition for hover effect */
}

.shareButton:hover {
    background-color: #21b721; /* Slightly darker green on hover */
}


@keyframes rotate {
    from {
        transform: rotate(360deg);
    }
    to {
        transform: rotate(0deg);
    }
}


@keyframes rotateImage {
    0%, 25% { /* Start and hold the initial position for the pause duration */
        transform: rotate(0deg);
    }
    30% { /* End of first rotation */
        transform: rotate(120deg);
    }
    30.1%, 55% { /* Hold position for the pause */
        transform: rotate(120deg);
    }
    60% { /* End of second rotation */
        transform: rotate(240deg);
    }
    60.1%, 85% { /* Hold position for the pause */
        transform: rotate(240deg);
    }
    90% { /* End of third rotation */
        transform: rotate(360deg);
    }
    100% {
        transform: rotate(360deg);
    }
}